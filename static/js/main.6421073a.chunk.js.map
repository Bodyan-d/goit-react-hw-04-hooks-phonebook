{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["ContactForm","name","number","handleChange","handleSubmit","className","onSubmit","onChange","type","value","pattern","title","required","Filter","filter","ContactList","contacts","deleteItem","map","contact","id","onClick","isFirstRender","App","useState","setContacts","setFilter","setName","setNumber","useEffect","localStorage","setItem","JSON","stringify","parse","getItem","e","target","preventDefault","some","includes","uuidv4","alert","toLowerCase","elemIndexToDelete","findIndex","prev","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6421073a.chunk.js","sourcesContent":["import React from 'react';\nimport './ContactForm.css';\n\nexport default function ContactForm({\n  name,\n  number,\n  handleChange,\n  handleSubmit,\n}) {\n  return (\n    <form className=\"phonebook-form\" onSubmit={handleSubmit}>\n      <label className=\"phonebook-label\">\n        Name\n        <input\n          className=\"phonebook-input\"\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className=\"phonebook-label\">\n        Number\n        <input\n          className=\"phonebook-input\"\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button className=\"submt-form\" type=\"submit\">\n        Submit\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport './Filter.css';\n\nexport default function Filter({ filter, handleChange }) {\n  return (\n    <div>\n      <p className=\"filter-title\">Find contacts by name</p>\n      <input\n        className=\"search\"\n        onChange={handleChange}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport './ContactList.css';\n\nexport default function ContactList({ contacts, deleteItem }) {\n  return (\n    <ul>\n      {contacts.map(contact => {\n        return (\n          <li key={contact.id} className=\"list-item\">\n            {`${contact.name}: ${contact.number}`}\n            <button id={contact.id} onClick={deleteItem} className=\"delete-btn\">\n              delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nlet isFirstRender = true;\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  useEffect(() => {\n    if (isFirstRender) {\n      isFirstRender = false;\n      return;\n    }\n\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem('contacts'))) {\n      setContacts(JSON.parse(localStorage.getItem('contacts')));\n    }\n  }, []);\n\n  const handleChange = e => {\n    if (e.target.name === 'filter') {\n      setFilter(e.target.value);\n      return;\n    }\n    if (e.target.name === 'name') {\n      setName(e.target.value);\n      return;\n    }\n    if (e.target.name === 'number') {\n      setNumber(e.target.value);\n      return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setContacts(() => {\n      if (contacts.some(contact => contact.name.includes(name))) {\n        alert(`${name} is already in contacts`);\n        return;\n      }\n\n      return [...contacts, { id: uuidv4(), name, number }];\n    });\n\n    setName('');\n    setNumber('');\n  };\n\n  const handleFilter = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const deleteItem = e => {\n    const elemIndexToDelete = contacts.findIndex(\n      contact => e.target.id === contact.id,\n    );\n\n    return setContacts(prev => prev.splice(elemIndexToDelete, 1));\n  };\n\n  // deleteItem = e => {\n  //   const elemIndexToDelete = this.state.contacts.findIndex(\n  //     contact => e.target.id === contact.id,\n  //   );\n  //   return this.setState(prevState => {\n  //     console.log(elemIndexToDelete);\n  //     prevState.contacts.splice(elemIndexToDelete, 1);\n\n  //     return { prevState };\n  //   });\n  // };\n\n  return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n      <ContactForm\n        name={name}\n        number={number}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n      />\n\n      <h2>Contacts</h2>\n      <Filter filter={filter} handleChange={handleChange} />\n      <ContactList contacts={handleFilter()} deleteItem={deleteItem} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}